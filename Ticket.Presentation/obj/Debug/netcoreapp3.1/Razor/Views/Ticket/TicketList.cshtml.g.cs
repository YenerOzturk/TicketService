#pragma checksum "/Users/yener.ozturk/Projects/TicketWeb/Ticket.Presentation/Views/Ticket/TicketList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Ticket_TicketList), @"mvc.1.0.view", @"/Views/Ticket/TicketList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/yener.ozturk/Projects/TicketWeb/Ticket.Presentation/Views/_ViewImports.cshtml"
using Ticket.Presentation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/yener.ozturk/Projects/TicketWeb/Ticket.Presentation/Views/_ViewImports.cshtml"
using Ticket.Presentation.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a7", @"/Views/Ticket/TicketList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b5b80179090756b5b3afa7471abe24d7f2ecc9ed", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Ticket_TicketList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("selected", new global::Microsoft.AspNetCore.Html.HtmlString("selected"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("kt-form kt-form--fit mb-4"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frmFilter"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "25", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "50", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "100", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("frmSubTicket"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("frmTicket"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("mailForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("mailForm2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/yener.ozturk/Projects/TicketWeb/Ticket.Presentation/Views/Ticket/TicketList.cshtml"
   ViewData["Title"] = "Privacy Policy"; 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .not-allowed {
        cursor: not-allowed;
    }

    .grabbing {
        cursor: -webkit-grabbing;
        cursor: grabbing;
    }

    .customCell {
        font-size: 13px !important;
        padding: 2px 2px 2px 2px !important;
    }

    .customButtonCell {
        font-size: 13px !important;
        padding: 2px 2px 2px 2px !important;
        text-align: center;
    }

    .modal-open {
        overflow-y: hidden !important;
    }

</style>
<script>

    var ticketNo = 0;

    function GetSubTickets(ticketId,rowIndex) {

        ticketNo = ticketId;

        $.ajax({
            type: 'GET',
            url: '../../Ticket/GetSubTickets',
            data: { ticketId: ticketId },
            success: function (data) {

                $('#subTickets').empty();

                    var rowData = table.row(rowIndex).data();

                $('#subTicketTitle').text(""Cari:"" + rowData[""cardName""]);
                $(""#sbCardCode"").val(rowData[""cardCode""]);
                    $('#subTicketSu");
            WriteLiteral(@"bTitle').text(""#"" + ticketId + "" "" + rowData[""subject""]);
                    $('#subTickets').append(data);
                    $('#modalSubTicketList').modal();


            },
            error: function (xhr, ajaxOptions, thrownError) {
                Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
            }
        });
    }

    function SubTicketAdd() {

        var ticketId = ticketNo

        var row = table.rows({ selected: true })[0];
        var rowIndex = 0;

        if (row.length > 0) {
            rowIndex = row[0];
            ticketId = table.row(rowIndex).data().id;

        } else {
            ticketId = table.row(0).data().id;
        }

        if (ticketId == 0) {

            Swal.fire(""Hata!"", ""Önce Bir Ticket Seçiniz."", ""error"");
            return;
        }

        if ($(""#StartDate"").data(""datetimepicker"").getDate() > $(""#EndDate"").data(""datetimepicker"").getDate()) {

            Swal.fire(""Hata!"", ""Başlangıç Tarihi Bitiş Tarihinden Büyük Olmalıdır."", ""error"");
            re");
            WriteLiteral(@"turn;
        }

        if ($(""[name='frmSubTicket'] [name='Description']"").val() === '') {
            Swal.fire(""Hata!"", ""Açıklama Alanı Boş Geçilemez."", ""error"");
            return;
        }

        if ($(""[name='frmSubTicket'] [name='Owner']"").val() === '') {
            Swal.fire(""Hata!"", ""Talep Sahibi Alanı Boş Geçilemez."", ""error"");
            return;
        }


        var myForm = document.getElementsByName('frmSubTicket');

        var fileupload = $('[name=""frmSubTicket""] [name=""File""]').get(0);
        var files = fileupload.files;

        var fd = new FormData(myForm[0]);
        fd.append('File', files[0]);

        fd.append('TicketId', ticketId);

        var startDate = GetFormatedDate($(""#StartDate"").data(""datetimepicker"").getDate());

        var endDate = GetFormatedDate($(""#EndDate"").data(""datetimepicker"").getDate());

        fd.append('StartDate', startDate);
        fd.append('EndDate', endDate);

        var callback = function () {
            $.ajax({
                type: 'P");
            WriteLiteral(@"OST',
                url: '../../Ticket/SaveSubTicket',
                data: fd,
                processData: false,
                contentType: false,
                success: function () {

                    $(""[name='Id']"").val(0);
                    $(""[name='Description']"").val('');
                    GetSubTickets(ticketId, rowIndex);

                    $('#modalSubTicket').modal('hide');


                },
                error: function (xhr, ajaxOptions, thrownError) {
                    Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
                }
            });
        };

        var id = $('[name=""Id""]').val();

        var closeTicket = $('[name=""CloseTicket""]').prop(""checked"")

        if (closeTicket && id==0) {
            Swal.fire({
                title: 'Mail Gönderilsin mi?',
                text: ""Kapanan Ticket için yetkililere mail gönderilsin mi?"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: ""Evet"",
       ");
            WriteLiteral(@"         cancelButtonText: ""Hayır"",
            }).then((result) => {
                if (result.isConfirmed) {
                    fd.append('SendMail', true);
                }

                callback();

            });
        } else {
            callback();
        }
    }

    function DeleteSubTicket(id, ticketId) {

        var callback = function () {

            var rowIndex = table.rows({ selected: true })[0];

            var data = $('[name=""frmSubTicket""]').serializeArray();

            data.splice(0, 1);

            data.push({ name: ""Id"", value: id });

            $.ajax({
                type: 'POST',
                url: '../../Ticket/DeleteSubTicket',
                data: data,
                success: function () {
                    GetSubTickets(ticketId, rowIndex[0]);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
                }
            });
        }

        ShowMessag");
            WriteLiteral(@"eBox(""Emin misiniz?"", ""Kayıt Silinecektir"", ""question"", callback)
    }

    function UpdateSubTicket(id, ticketId) {

        var myForm = document.getElementsByName('frmSubTicket');

        var fileupload = $('[name=""frmSubTicket""] [name=""File""]').get(0);
        var files = fileupload.files;

        var content = $('[name=""frmSubTicket""] [name=""Description""]').markdown().parseContent();

        var fd = new FormData(myForm[0]);
        fd.append('File', files[0]);

        fd.append('Id', id);

        var startDate = GetFormatedDate($(""#StartDate"").data(""datetimepicker"").getDate());

        var endDate = GetFormatedDate($(""#EndDate"").data(""datetimepicker"").getDate());

        var closeTicket = $(""#CloseTicket"").val();


        fd.append('StartDate', startDate);
        fd.append('EndDate', endDate);

        $.ajax({
            type: 'POST',
            url: '../../Ticket/CompleteSubTicket',
            data: fd,
            processData: false,
            contentType: false,
            success: f");
            WriteLiteral(@"unction () {

                var rowIndex = table.rows({ selected: true })[0];

                GetSubTickets(ticketId, rowIndex[0]);


            },
            error: function (xhr, ajaxOptions, thrownError) {
                Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
            }
        });
    }

    function TicketSaveChanges() {

        if ($(""[name='frmTicket'] [name='Description']"").val() === '') {
            Swal.fire(""Hata!"", ""Açıklama Alanı Boş Geçilemez."", ""error"");
            return;
        }

        if ($(""[name='frmTicket'] [name='Subject']"").val() === '') {
            Swal.fire(""Hata!"", ""Konu Alanı Boş Geçilemez."", ""error"");
            return;
        }


        if ($(""[name='frmTicket'] [name='ProjectId']"").val() === 0) {
            Swal.fire(""Hata!"", ""Proje Seçmeniz Gerekmektedir."", ""error"");
            return;
        }


        var a = $(""[name='frmTicket'] [name='UserId']"").val();
        if ($(""[name='frmTicket'] [name='UserId']"").val() === null) {
            Swal.fire(");
            WriteLiteral(@"""Hata!"", ""Danışman Alanı Boş Geçilemez."", ""error"");
            return;
        }


        var myForm = document.getElementsByName('frmTicket');

        var fileupload = $('[name=""frmTicket""] [name=""File""]').get(0);
        var files = fileupload.files;

        var fd = new FormData(myForm[0]);
        fd.append('File', files[0]);

        var estimatedDate = GetFormatedDate($(""#EstimatedEndDate"").datepicker('getDate'));

        fd.append(""EstimatedEndDate"", estimatedDate);

        var tag = GetTagifyValue();

        fd.append(""TicketLabel"", tag);

        var projectCount = $(""[name='ProjectId'] option"").length;
        var selectedProje = $(""[name='ProjectId']"").val();

        var callback = function () {


            $.ajax({
                type: 'POST',
                url: '../../Ticket/SaveTicket',
                processData: false,
                contentType: false,
                data: fd,
                success: function (result) {
                    $('[name=""frmTicket""]').trigger(""res");
            WriteLiteral(@"et"");

                    Swal.fire({
                        icon: 'success',
                        title: 'İşlem Başarılı',
                        showConfirmButton: true,
                        timer: 1500
                    });

                    $('#modalTicket').modal('hide');

                    RenderData();

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
                }
            });

        };


        if (projectCount > 1 && selectedProje == ""-1"") {

            Swal.fire({
                title: 'Proje Seçimi',
                text: ""Bu cari için tanımlı proje tanımlı seçmeden devam edilsin mi?"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: ""Evet"",
                cancelButtonText: ""Hayır"",
            }).then((result) => {
                if (result.isConfirmed) {
                    callback();
                }
     ");
            WriteLiteral(@"       });
        }else {

            callback();
        }
    }

    function ClearForm() {

        $(""[name='frmTicket'] [name='Id']"").val(0);
        $('[name=""frmTicket""]').trigger(""reset"");
        RenderDatePicker('EstimatedEndDate', new Date());
        $(""[name='frmTicket'] [name='Billing']"").prop('checked', false);
        $(""[name='frmTicket'] [name='UserId']"").val(");
#nullable restore
#line 339 "/Users/yener.ozturk/Projects/TicketWeb/Ticket.Presentation/Views/Ticket/TicketList.cshtml"
                                               Write(ViewData["UserId"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@");
        ClearTags();
        $(""[name='frmTicket'] #divLinks"").empty();
        var cardCode = $('[name=""CardCode""]').val();
        var productId = $('[name=""ProductId""]').val();

        var data = [];

        data.push({ name: ""cardCode"", value: cardCode });
        data.push({ name: ""productId"", value: productId });

        FillDropDown(""/JsonObject/GetProjectsForDropDown"", ""ProjectId"", null, data);
        $(""[name='File']"").val('');
    }

    function FillForm(id, event) {
        $.ajax({
            type: 'GET',
            url: '../../Ticket/GetTicketById',
            data: { id: id },
            success: function (data) {

                if (data.status == 2) {
                    Swal.fire(""Bilgilendirme!"", ""Projesi Kapanmış Ticketlarda İşlem Yapılamaz."", ""info"");
                    return;
                }
                else {
                    data = data.data;
                }


                for (var key in data) {

                    var dom = $('[name=""frmTicket""]').find(':");
            WriteLiteral(@"input').filter(function () {

                        if ($(this).attr('name') == undefined) return undefined;

                        return $(this).attr('name').toLowerCase().indexOf(key.toLowerCase()) > -1;
                    });


                    var a = dom[0];
                    if (key=='estimatedEndDate') {

                        RenderDatePicker('EstimatedEndDate', data[key]);

                    } else if (!dom.is(':checkbox')) {
                        dom.val(data[key]);
                    }

                    if (key == ""description"") {
                        $('[name=""Description""]').markdown({
                            preview: false
                        });

                        $('.md-preview').empty();
                        $('.md-preview').append('<p>'+data[key]+'</p>');
                    }

                    if (key == 'projectId') {

                        var params = [];

                        var cardCode = data[""cardCode""];
                        var pr");
            WriteLiteral(@"oductId = data[""productId""];

                        params.push({ name: ""cardCode"", value: cardCode });
                        params.push({ name: ""productId"", value: productId });

                        FillDropDown(""/JsonObject/GetProjectsForDropDown"", ""ProjectId"", data[""projectId""] ,params);
                    }


                    if (dom.is(':checkbox')) {
                        dom.prop('checked', data[key]);
                    }

                    if (key == ""ticketLabel"") {

                        AddTag(data[key]);
                    }

                    if (key == ""attachment"") {

                        $(""[name='frmTicket'] input[name=Attachment]"").val(data[key]);

                        if (data[key] !== null) {

                            var attchs = data[key].split(';');

                            $(""[name='frmTicket'] #divLinks"").empty();
                            for (var atc = 0; atc < attchs.length; atc++) {
                                if (attchs[atc] != """") {

  ");
            WriteLiteral(@"                                  $(""[name='frmTicket'] #divLinks"").css(""display"", ""block"");
                                    $(""[name='frmTicket'] #divLinks"").append($('<a>').text(attchs[atc]).attr('href', ""../"" + attchs[atc]).attr('target','_blank'));
                                    $(""[name='frmTicket'] #divLinks"").append($('<br/>'));
                                }
                                else {
                                    $(""[name='frmTicket'] #divLinks"").css(""display"", ""none"");
                                }
                            }
                        }
                    }

                }

                $(""#modalTicket"").modal();

            }
        });


    }

    function FillSubTicketForm(id) {

        $.ajax({
            type: 'GET',
            url: '../../Ticket/GetSubTicket',
            data: { id: id },
            success: function (data) {


                for (var key in data) {

                    if (key.toLowerCase() === ""startdate"") {
");
            WriteLiteral(@"
                        RenderDateTimePicker('StartDate', data[key]);

                        continue;

                    } else if (key.toLowerCase() === ""enddate"") {

                        RenderDateTimePicker('EndDate', data[key]);

                        continue;

                    }

                    var dom = $('[name=""frmSubTicket""]').find(':input').filter(function () {

                        if ($(this).attr('name') == undefined) return undefined;

                        return $(this).attr('name').toLowerCase().indexOf(key.toLowerCase()) > -1;
                    });


                    if (dom[0] === undefined) {
                        dom = $('[name=""frmSubTicket""] [name=""'+key+'""]');
                    }

                    if (dom[0] === undefined) continue;

                    var domObject = dom[0];
                    if (!$(domObject).is(':checkbox')) {
                        $(domObject).val(data[key]);
                    }

                    if ($(domObject).is(':");
            WriteLiteral(@"checkbox')) {
                        $(domObject).prop('checked', data[key]);
                    }

                    if (key == ""description"") {
                        $("".md-preview"").empty();
                        $("".md-preview"").html(""<p>"" + data[key] + ""<p>"")
                    }

                    if (key == ""attachment"") {


                        $(""[name='frmTicket'] input[name=Attachment]"").val(data[key]);


                        if (data[key] != """" && data[key] != null) {

                            $(""[name='frmTicket'] #attLink"").css(""display"", ""block"");
                            $(""[name='frmTicket'] #attLink"").attr(""href"", ""../"" + data[key]);
                            $(""[name='frmTicket'] #attLink"").text(data[key]);
                        }
                        else {
                            $(""[name='frmTicket'] #attLink"").css(""display"", ""none"");
                        }
                    }
                }

                $(""#modalSubTicket"").modal();

       ");
            WriteLiteral(@"     }
        });
    }

    function ClearSubTicketForm() {
        $('[name=""frmSubTicket""] [name=""Id""]').val(0);
        $(""[name='Description']"").val('');
        $(""[name='Owner']"").val('');
        RenderDateTimePicker('StartDate', '');
        RenderDateTimePicker('EndDate', '');
        $(""[name='frmSubTicket'] [name='UserId']"").val(");
#nullable restore
#line 537 "/Users/yener.ozturk/Projects/TicketWeb/Ticket.Presentation/Views/Ticket/TicketList.cshtml"
                                                  Write(ViewData["UserId"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@");
        $(""[name='frmSubTicket'] [name='AllDay']"").prop('checked', false);
        $(""[name='frmSubTicket'] [name='CloseTicket']"").prop('checked', false);
        $(""[name='Description']"").html('');
        $(""[name='File']"").val('');
    }

    function CancelTicket() {

        var fd = $('[name=""frmTicket""]').serializeArray();

        var data = [];
        data.push({ name: ""ticketId"", value: fd[0].value });

        $.ajax({
            type: 'POST',
            url: '../../Ticket/CancelTicket',
            data: data,
            success: function () {
                RenderData();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
            }
        });
    }

    function CloseTicket() {

        var fd = $('[name=""frmTicket""]').serializeArray();

        var data = [];
        data.push({ name: ""ticketId"", value: fd[0].value });

        $.ajax({
            type: 'POST',
            url: '../../Ticket/Close");
            WriteLiteral(@"Ticket',
            data: data,
            success: function () {
                RenderData();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
            }
        });
    }

    var table;
    function RenderData() {

        var data = $('#frmFilter').serializeArray();

        var pageLength = $(""#pageLength"").val();

        data.push({ name: ""pageLength"", value: pageLength });

        $.ajax({
            type: 'POST',
            url: ""../../Ticket/GetTicketsForClient"",
            traditional: true,
            data: data,
            success: function (result) {

                if ($.fn.dataTable.isDataTable('#ticketList')) {
                    table.destroy();
                }

              table=  $('#ticketList').DataTable({
                  dom: 'Blfrtip',
                  data: result,
                  ""searching"": false,
                  ""lengthMenu"": [[50, 100, 200, -1], [50, 100, 200, ""All""]]");
            WriteLiteral(@",
                  ""info"": false,
                  ""paging"": false,
                  select: {
                      toggleable: false
                  },
                  ""responsive"": true,
                  ""order"": [[0, ""desc""]],
                    buttons: [
                        'copy',
                        'excel',
                        'csv',
                        'pdf'
                    ],
                  columnDefs: [
                        {
                            responsivePriority: 1, targets: 1
                        },
                        {
                            responsivePriority: 2, targets: 3
                        },
                        {
                            responsivePriority: 3, targets: 2
                        },
                        {
                            className: 'customButtonCell', targets: 8
                        },
                        {
                            className: 'customButtonCell', targets: 9
         ");
            WriteLiteral(@"               },
                        {
                            className: 'customButtonCell', responsivePriority: 4, targets: 10
                        },
                        {
                            className: 'customButtonCell', responsivePriority: 5, targets: 11
                        },
                        {
                            className: 'customCell', targets: ""_all""
                        }

                    ],
                    ""createdRow"": function (row, data, index) {
                        $('td', row).eq(0).addClass('grabbing');
                        $('td', row).eq(1).addClass('grabbing');
                        $('td', row).eq(2).addClass('grabbing');
                        $('td', row).eq(3).addClass('grabbing');
                        $('td', row).eq(4).addClass('grabbing');
                        $('td', row).eq(5).addClass('grabbing');
                        $('td', row).eq(6).addClass('grabbing');
                        $('td', row).eq(7).addCl");
            WriteLiteral(@"ass('not-allowed');

                    },
                    ""columns"": [
                        {
                            ""data"": ""id"",
                            ""width"": ""3%"",
                        },
                        {
                            ""data"": ""cardName"",
                            ""width"": ""15%"",
                        },
                        {
                            ""data"": ""createdUser"",
                            ""width"": ""10%"",
                        },
                        {
                            ""data"": ""nameSurname"",
                            ""width"": ""10%"",
                        },
                        {
                            ""data"": ""createDateAsString"",
                            ""width"": ""10%"",
                        },
                        {
                            ""data"": ""projectName"",
                            ""width"": ""10%"",
                        },
                        {
                            ""data"": ""su");
            WriteLiteral(@"bject"",
                            ""width"": ""16%"",
                        },
                        {
                            ""data"": ""supportType"",
                            ""width"": ""7%"",
                            ""render"": function (data, type, row) {

                                return '<span>' + data + '</span>';
                            }
                        },
                        {
                            ""data"": ""priority"",
                            ""width"": ""5%"",
                            ""render"": function (data, type, row) {

                                var cls = ""btn-primary btn-sm"";
                                var opts = """";

                                if (data == 1) {

                                    cls = ""btn-primary btn-sm"";
                                    opts = '<option value=""1"" selected>Düşük</option>' +
                                        '<option value=""2"">Orta</option>' +
                                        '<option value=""");
            WriteLiteral(@"3"">Yüksek</option>';

                                }
                                else if (data == 2) {

                                    cls = ""btn-warning btn-sm"";
                                    opts = '<option value=""1"">Düşük</option>' +
                                        '<option value=""2"" selected>Orta</option>' +
                                        '<option value=""3"">Yüksek</option>';
                                }
                                else {

                                    cls = ""btn-danger btn-sm"";
                                    opts = '<option value=""1"">Düşük</option>' +
                                        '<option value=""2"">Orta</option>' +
                                        '<option value=""3"" selected>Yüksek</option>';

                                }


                                return '<select class=""form-control selectpicker"" title=""Primary"" data-key=""' + row[""id""] + '"" id=""priority"" data-style=""' + cls + '"">' +
                     ");
            WriteLiteral(@"               opts +
                                    '</select>';

                            }
                        },
                        {
                            ""data"": ""status"",
                            ""width"": ""3%"",
                            ""render"": function (data, type, row) {

                                if (data === ""YeniTalep"") {
                                    return '<span class=""label label-danger label-pill label-inline mr-2"">Yeni</span>';
                                }
                                else if (data === ""Development"") {
                                    return '<span class=""label label-warning label-pill label-inline mr-2"">Yazılımda</span>'
                                }
                                else if (data === ""Close"") {
                                    return '<span class=""label label-dark label-inline mr-2"">Kapalı</span>'
                                } else {
                                    return '<span class=""label");
            WriteLiteral(@" label-info label-inline mr-2"">Açık</span>';
                                }
                            }
                        },
                        {
                            ""data"": ""id"",
                            ""width"": ""5%"",
                            ""render"": function (data, type, row) {
                                return '<a onclick=""FillForm(' + data + ',event)"" class=""btn btn-dark btn-sm"">Düzenle</a>'
                            }
                        },
                        {
                            ""data"": ""id"",
                            ""width"": ""6%"",
                            ""render"": function (data, type,row ,rowIndex) {

                                var subTicketCount = row[""subTicketCount""];
                                var cardIsActive = row[""cardIsActive""];

                                var propDisabled = ""disabled"";
                                if (cardIsActive)
                                    propDisabled=""""


                          ");
            WriteLiteral(@"      var retval = '<a onclick=""GetSubTickets(' + data + ',' + rowIndex.row + ')"" class=""btn btn-light btn-sm ' + propDisabled + '"">Alt İşler</a>';
                                if (subTicketCount > 0) {
                                    retval = '<a onclick=""GetSubTickets(' + data + ',' + rowIndex.row + ')"" class=""btn btn-success btn-sm ' + propDisabled + '"">Alt İşler</a>';
                                }

                                return retval;
                            }
                        }

                    ],
                    ""initComplete"": function (settings, json) {
                        $('.selectpicker').selectpicker();

                        $('#ticketList thead th').removeClass('customCell');


                    },
                    ""drawCallback"": function (settings) {
                        $('.selectpicker').selectpicker();

                        $('.selectpicker').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {

            ");
            WriteLiteral(@"                var ticketId = e.currentTarget.attributes[2].nodeValue;

                            var data = { Id: ticketId, Priority: clickedIndex };

                            $.ajax({
                                type: 'POST',
                                url: '../../Ticket/UpdatePriority',
                                data: data,
                                success: function () {
                                    RenderData();
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
                                }
                            });


                        });
                    }
                });

                $('#ticketList tbody').on('click', 'td', function () {

                    var data = table.row(this).data();
                    ticketNo = data.id;

                });

            }
        });

    }

    funct");
            WriteLiteral(@"ion SendMail() {

        var data = $('#mailForm').serializeArray();

        data.push({ name: ""ToUsers"", value: $('#ToUsers').val() })

        var ticketId = ticketNo

        var row = table.rows({ selected: true })[0];
        var rowIndex = 0;

        if (row.length > 0) {
            rowIndex = row[0];
            ticketId = table.row(rowIndex).data().id;

        } else {
            ticketId = table.row(0).data().id;
        }

        data.push({ name: ""ticketId"", value: ticketId });


        $.ajax({
            type: 'POST',
            url: '../../Ticket/SendMail',
            data: data,
            success: function () {
                Swal.fire({
                    icon: 'success',
                    title: 'Mail Gönderme Başarılı',
                    showConfirmButton: true,
                    timer: 1500
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
            }
        })");
            WriteLiteral(@";

    }

    function SendMailForSubTicket() {


        var data = $('#mailForm2').serializeArray();

        if (sbId == 0) {
            Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
        }


        var ticketId = ticketNo

        var row = table.rows({ selected: true })[0];
        var rowIndex = 0;

        if (row.length > 0) {
            rowIndex = row[0];
            ticketId = table.row(rowIndex).data().id;

        } else {
            ticketId = table.row(0).data().id;
        }

        data.push({ name: ""ticketId"", value: ticketId });
        data.push({ name: ""subTicketId"", value: sbId });

        data.push({ name: ""ToUsers"", value: $('#ToUsers2').val() })

        $.ajax({
            type: 'POST',
            url: '../../Ticket/SendMailForSubTicket',
            data: data,
            success: function () {
                Swal.fire({
                    icon: 'success',
                    title: 'Mail Gönderme Başarılı',
                    showConfirmButton: true,
                  ");
            WriteLiteral(@"  timer: 1500
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                Swal.fire(""Hata!"", ""Hata Oluştu."", ""error"");
            }
        });
    }

    function PrepareMail() {

        var callback = function () {
             $('#modalMail').modal('show')
        }

        var cardCode = $('#sbCardCode').val()

        var data = { ""cardCode"": cardCode }

        FillMultiDropDown(""/JsonObject/GetUsersForDropDown"", ""ToUsers"", null, data, callback);
    }

    var sbId = 0;
    function PrepareMailSubTicket(id) {

        var callback = function () {
            $('#modalMailSubTicket').modal('show')
        }

        var cardCode = $('#sbCardCode').val()

        var data = { ""cardCode"": cardCode }

        FillMultiDropDown(""/JsonObject/GetUsersForDropDown"", ""ToUsers2"", null, data, callback);

        sbId = id;
    }

</script>
<div class=""card card-custom"">
    <div class=""card-header flex-wrap border-0 pt-6 pb-0"">
        <div class=""card-title""");
            WriteLiteral(@">
            <h3 class=""card-label"">
                İş Listesi
            </h3>
        </div>
        <div class=""card-toolbar"">
            <!--begin::Button-->
            <a onclick=""ClearForm()"" class=""btn btn-primary font-weight-bolder"" data-toggle=""modal"" data-target=""#modalTicket"">
                <span class=""svg-icon svg-icon-md"">
                    <!--begin::Svg Icon | path:assets/media/svg/icons/Design/Flatten.svg-->
                    <svg xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"" width=""24px"" height=""24px"" viewBox=""0 0 24 24"" version=""1.1"">
                        <g stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">
                            <rect x=""0"" y=""0"" width=""24"" height=""24"" />
                            <circle fill=""#000000"" cx=""9"" cy=""15"" r=""6"" />
                            <path d=""M8.8012943,7.00241953 C9.83837775,5.20768121 11.7781543,4 14,4 C17.3137085,4 20,6.6862915 20,10 C20,12.2218457 18.7923188,14.1616223 16.9975805,15");
            WriteLiteral(@".1987057 C16.9991904,15.1326658 17,15.0664274 17,15 C17,10.581722 13.418278,7 9,7 C8.93357256,7 8.86733422,7.00080962 8.8012943,7.00241953 Z"" fill=""#000000"" opacity=""0.3"" />
                        </g>
                    </svg>
                    <!--end::Svg Icon-->
                </span>Yeni Kayıt
            </a>
        </div>
    </div>
    <div class=""card-body"">

        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a742710", async() => {
                WriteLiteral(@"

            <div class=""row mb-6"">
                <div class=""col-lg-1 mb-lg-0 mb-6"">
                    <label>Ticket Id:</label>
                    <input type=""text"" class=""form-control datatable-input"" id=""Id"" name=""id"" data-col-index=""0"" />
                </div>
                <div class=""col-lg-2 mb-lg-0 mb-6"">
                    <label>Destek Tipi:</label>
                    <select class=""form-control datatable-input"" id=""SupportType"" name=""supportType"" data-col-index=""6"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a743507", async() => {
                    WriteLiteral("Hepsi");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a744736", async() => {
                    WriteLiteral("Yerinde Destek");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a745974", async() => {
                    WriteLiteral("Telefon");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a747205", async() => {
                    WriteLiteral("Mail");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a748433", async() => {
                    WriteLiteral("Uzaktan Destek");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </select>
                </div>
                <div class=""col-lg-2 mb-lg-0 mb-6"">
                    <label class=""col-md-12"">Cari Adı:</label>
                    <select multiple=""multiple"" class=""form-control datatable-input"" id=""CardCode"" name=""cardCodes"" data-col-index=""0"">
                    </select>
                </div>
                <div class=""col-lg-2 mb-lg-0 mb-6"">
                    <label>Konu:</label>
                    <input type=""text"" class=""form-control datatable-input"" id=""Subject"" name=""Subject"" data-col-index=""0"" />
                </div>
                <div class=""col-lg-2 mb-lg-0 mb-6"">
                    <label class=""col-md-12"">Danışman:</label>
                    <select multiple=""multiple"" class=""form-control datatable-input"" id=""UserId"" name=""userIds"" data-col-index=""0"">
                    </select>
                </div>
                <div class=""col-lg-2 mb-lg-0 mb-6"">
                    <label class=""col-md-12"">Durum:</label>
            ");
                WriteLiteral("        <select multiple=\"multiple\" class=\"form-control datatable-input\" id=\"Status\" name=\"statuList\" data-col-index=\"6\">\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a750905", async() => {
                    WriteLiteral("Açık");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a752219", async() => {
                    WriteLiteral("Kapalı");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a753449", async() => {
                    WriteLiteral("Yeni Talep");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </select>
                </div>
                <div class=""col-lg-1 mb-lg-0 mb-6"">
                    <label class=""col-md-12"">Öncelik:</label>
                    <select multiple=""multiple"" class=""form-control datatable-input"" id=""Priority"" name=""Priority"" data-col-index=""6"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a755085", async() => {
                    WriteLiteral("Düşük");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a756400", async() => {
                    WriteLiteral("Orta");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a757948", async() => {
                    WriteLiteral("Yüksek");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </select>
                </div>
            </div>
            <div class=""row mt-8"">
                <div class=""col-lg-12"">
                    <button type=""button"" class=""btn btn-primary btn-primary--icon"" id=""reload"">
                        <span>
                            <i class=""la la-search""></i>
                            <span>Ara</span>
                        </span>
                    </button>&#160;&#160;
                    <button class=""btn btn-secondary btn-secondary--icon"" id=""kt_reset"">
                        <span>
                            <i class=""la la-close""></i>
                            <span>Temizle</span>
                        </span>
                    </button>
                </div>
            </div>
        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n        <div class=\"col-lg-3\" style=\"float:right\">\n            <label style=\"margin-top:10px\">Gösterilecek Kayıt Sayısı:</label>\n            <select class=\"form-control\" style=\"width: 50%;float:right;\" id=\"pageLength\">\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a761417", async() => {
                WriteLiteral("25");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a762571", async() => {
                WriteLiteral("50");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a763725", async() => {
                WriteLiteral("100");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a764882", async() => {
                WriteLiteral("Hepsi");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </select>
        </div>
        <table class=""table table-bordered table-hover table-checkable"" id=""ticketList"" style=""width:100%"">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Cari</th>
                    <th>Ticketı Açan</th>
                    <th>Danışman</th>
                    <th>Oluşturma Tarihi</th>
                    <th>Proje</th>
                    <th>Konu</th>
                    <th>Destek Tipi</th>
                    <th>Öncelik</th>
                    <th>Durum</th>
                    <th>#</th>
                    <th>#</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<div class=""modal fade"" id=""modalSubTicketList"" data-backdrop=""static"" tabindex=""-1"" role=""dialog"" aria-labelledby=""staticBackdrop"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <");
            WriteLiteral(@"h7 class=""modal-title"" id=""subTicketTitle""></h7>
                <input type=""hidden"" id=""sbCardCode"" />
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <i aria-hidden=""true"" class=""ki ki-close""></i>
                </button>
            </div>
            <div class=""modal-body"">
                <div class=""card card-custom"">
                    <div class=""col-sm-12"">
                        <h6 id=""subTicketSubTitle""></h6>
                        <span class=""btn btn-light-success btn-sm text-uppercase font-weight-bolder"" style=""float:right;margin-top:2px"" onclick=""ClearSubTicketForm()"" data-toggle=""modal"" data-target=""#modalSubTicket"" title=""Previose page"">Yeni İş</span>
                        <span class=""btn btn-light-danger btn-sm text-uppercase font-weight-bolder"" style=""margin-right:2px;float:right;margin-top:2px"" onclick=""PrepareMail()"" title=""Previose page"">Tümünü Mail Gönder</span>
                    </div>
                    <div");
            WriteLiteral(@" class=""card-body"" id=""subTickets"" style=""overflow: scroll;max-height:700px"">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""modalSubTicket"" data-backdrop=""static"" tabindex=""-1"" role=""dialog"" aria-labelledby=""staticBackdrop"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-scrollable modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Alt İş <label id=""lblTicketId""></label></h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <i aria-hidden=""true"" class=""ki ki-close""></i>
                </button>
            </div>
            <div class=""modal-body"">
                <div class=""card card-custom"">

                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a769161", async() => {
                WriteLiteral(@"

                        <div class=""card-body"">
                            <div class=""form-group mb-8"">
                                <input type=""hidden"" name=""Id"" />
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-lg-2 col-form-label"">Açıklama</label>
                                <div class=""col-lg-10"">
                                    <textarea class=""form-control"" name=""Description"" data-provide=""markdown"" rows=""10""></textarea>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-lg-2 col-form-label"">Talep Eden</label>
                                <div class=""col-lg-10"">
                                    <input type=""text"" name=""Owner"" class=""form-control"" />
                                </div>
                            </div>
                            <div class=");
                WriteLiteral(@"""form-group row"">
                                <label class=""col-lg-2 col-form-label"">Danışman</label>
                                <div class=""col-lg-10"">
                                    <select name=""UserId"" class=""form-control"">
                                    </select>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label for=""example-datetime-local-input"" class=""col-lg-2 col-form-label"">Başlangıç Tarihi</label>
                                <div class=""col-lg-10"">
                                    <input type=""text"" class=""form-control datetimepicker-input"" placeholder=""Tarih Seç"" id=""StartDate"" />

                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label for=""example-datetime-local-input"" class=""col-lg-2 col-form-label"">Bitiş Tarihi</label>
                    ");
                WriteLiteral(@"            <div class=""col-lg-10"">
                                    <input type=""text"" class=""form-control datetimepicker-input"" placeholder=""Tarih Seç"" id=""EndDate"" />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <div class=""col-lg-2""></div>
                                <label class=""checkbox"">
                                    <input type=""checkbox"" name=""AllDay"" value=""true"" />
                                    <span></span>
                                    Tüm Gün
                                </label>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-lg-2 col-form-label"">Durum</label>
                                <div class=""col-lg-10"">
                                    <select name=""Status"" class=""form-control"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a772630", async() => {
                    WriteLiteral("Açık");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a773874", async() => {
                    WriteLiteral("Kapalı");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a775120", async() => {
                    WriteLiteral("Yazılımda");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </select>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <div class=""col-lg-2""></div>
                                <label class=""checkbox"">
                                    <input type=""checkbox"" name=""CloseTicket"" value=""true"" />
                                    <span></span>
                                    Ticket Kapat
                                </label>
                            </div>
                            <div class=""form-group"">
                                <label>Dosya Eki:</label>

                                <input type=""file"" name=""File"" />

                                <input type=""hidden"" name=""Attachment"" />

                                <a id=""attLink"" style=""display:none"">Eklenti</a>

                            </div>

                        </div>

                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-light-primary font-weight-bold"" data-dismiss=""modal"">Kapat</button>
                <button type=""button"" onclick=""SubTicketAdd()"" class=""btn btn-primary font-weight-bold"">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""modalTicket"" data-backdrop=""static"" tabindex=""-1"" role=""dialog"" aria-labelledby=""staticBackdrop"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Ticket Giriş</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <i aria-hidden=""true"" class=""ki ki-close""></i>
                </button>
            </div>
            <div class=""modal-body"">
                <div class");
            WriteLiteral("=\"card card-custom\">\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a779617", async() => {
                WriteLiteral(@"
                        <input type=""hidden"" name=""Id"" />
                        <input type=""hidden"" name=""Status"" />
                        <div class=""card-body"" style=""padding:0.25rem"">
                            <div class=""row"">
                                <div class=""col-lg-6"">
                                    <label class=""col-form-label text-lg-right"">Cari:</label>
                                    <select name=""CardCode"" class=""form-control""></select>
                                </div>
                                <div class=""col-lg-6"">
                                    <label class=""col-form-label text-lg-right"">Danışman:</label>
                                    <select name=""UserId"" class=""form-control""></select>
                                </div>
                            </div>
                            <div class=""row"">
                                <div class=""col-lg-6"">
                                    <label class=""col-form-label text-lg-right"">Ürün:</la");
                WriteLiteral(@"bel>
                                    <select class=""form-control"" name=""ProductId""></select>
                                </div>
                                <div class=""col-lg-6"">
                                    <label class=""col-form-label text-lg-right"">Destek Tipi:</label>
                                    <select name=""SupportType"" class=""form-control"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a781395", async() => {
                    WriteLiteral("Yerinde Destek");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a782649", async() => {
                    WriteLiteral("Telefon");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a783896", async() => {
                    WriteLiteral("Mail");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a785140", async() => {
                    WriteLiteral("Uzaktan Destek");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </select>
                                </div>
                            </div>
                            <div class=""row"">
                                <div class=""col-lg-6"">
                                    <label class=""col-form-label text-lg-right"">Proje:</label>
                                    <select name=""ProjectId"" class=""form-control"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a786803", async() => {
                    WriteLiteral("Proje Bağımsız");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </select>
                                </div>
                                <div class=""col-lg-6"">
                                    <label class=""col-form-label text-lg-right"">Tahmini Bitiş:</label>
                                    <input type=""text"" class=""form-control form-control-solid"" id=""EstimatedEndDate"" />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <div class=""col-lg-6"">
                                    <label class=""col-form-label text-lg-right"">Etiket:</label>
                                    <input id=""kt_tagify_5"" class=""form-control tagify"" name='tags3' placeholder=""Etiket Ekle"" />
                                </div>
                                <div class=""col-lg-6"" style=""padding-top:43px;"">
                                    <label class=""col-form-label text-lg-right""></label>
                                    <la");
                WriteLiteral(@"bel class=""checkbox"">
                                        <input type=""checkbox"" name=""Billing"" value=""true"" />
                                        <span></span>
                                        Faturalandırılmayacak
                                    </label>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-lg-2 col-form-label"">Konu</label>
                                <div class=""col-lg-10"">
                                    <input class=""form-control"" name=""Subject"" />
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <label class=""col-lg-2 col-form-label"">Açıklama</label>
                                <div class=""col-lg-10"">
                                    <textarea class=""form-control"" name=""Description"" rows=""10""></textarea>
           ");
                WriteLiteral(@"                     </div>
                            </div>
                            <div class=""row"">
                                <label>Dosya Eki:</label>

                                <input type=""file"" name=""File"" />

                                <input type=""hidden"" name=""Attachment"" />

                                <div id=""divLinks"" style=""display:none"">
                                </div>
                            </div>

                        </div>
                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-light-red font-weight-bold"" onclick=""CloseTicket()"" data-dismiss=""modal"">Ticket Kapat</button>
                <button type=""button"" class=""btn btn-light-dark font-weight-bold"" onclick=""CancelTicket()"" data-dismiss=""modal"">Ticket İptal</button>
                <button type=""button"" onclick=""TicketSaveChanges(false)"" class=""btn btn-primary font-weight-bold"">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<div id=""modalMail"" class=""modal fade"" data-backdrop=""static"" tabindex=""-1"" role=""dialog"" aria-labelledby=""staticBackdrop"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Mail Gönder</h5>
            </div>
            <div class=""modal-body"">
            <div class=""card ");
            WriteLiteral("card-custom\">\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a792976", async() => {
                WriteLiteral("\n                    <select multiple=\"multiple\" name=\"ToUsers\" id=\"ToUsers\" class=\"form-control datatable-input\"></select>\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
            <div class=""modal-footer"">
            <button type=""button"" class=""btn btn-light-green font-weight-bold"" data-dismiss=""modal"" onclick=""SendMail()"">Gönder</button>
            <button type=""button"" class=""btn btn-light-red font-weight-bold"" data-dismiss=""modal"">İptal</button>
        </div>
        </div>
    </div>
</div>

<div id=""modalMailSubTicket"" class=""modal fade"" data-backdrop=""static"" tabindex=""-1"" role=""dialog"" aria-labelledby=""staticBackdrop"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""exampleModalLabel"">Mail Gönder</h5>
            </div>
            <div class=""modal-body"">
                <div class=""card card-custom"">
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "30751e39c5fd5f07c4bbf4fe3a0632bfcb1346a795345", async() => {
                WriteLiteral("\n                        <select multiple=\"multiple\" name=\"ToUsers\" id=\"ToUsers2\" class=\"form-control datatable-input\"></select>\n                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-light-green font-weight-bold"" data-dismiss=""modal"" onclick=""SendMailForSubTicket()"">Gönder</button>
                <button type=""button"" class=""btn btn-light-red font-weight-bold"" data-dismiss=""modal"">İptal</button>
            </div>
        </div>
    </div>
</div>

<script>
var table;
    $(document).ready(function () {

        $('#Status').multiselect({
            enableFiltering: true,
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '100%'
        });

        $('#Priority').multiselect({
            enableFiltering: true,
            includeSelectAllOption: true,
            enableCaseInsensitiveFiltering: true,
            buttonWidth: '100%'
        });

        RenderDateTimePicker('StartDate', '');
        RenderDateTimePicker('EndDate', '');
       // RenderDatePicker('EstimatedEndDate','');

  ");
            WriteLiteral(@"      $('[name=""CardCode""]').change(function () {
            callback();
        });

        $('[name=""ProductId""]').change(function () {
            callback();
        });

        var callback = function () {

            var data = [];

            var cardCode = $('[name=""CardCode""]').val();
            var productId = $('[name=""ProductId""]').val();

            data.push({ name: ""cardCode"", value: cardCode });
            data.push({ name: ""productId"", value: productId });

            FillDropDown(""/JsonObject/GetProjectsForDropDown"", ""ProjectId"", null, data);
        };

        var callback2 = function () {

            FillDropDown(""/JsonObject/GetProductsForDropDown"", ""ProductId"", null, null, callback);
        };

        FillDropDown(""/JsonObject/GetCustomersForDropDown"", ""CardCode"", null, null, callback2);

        FillMultiDropDown(""/JsonObject/GetUsersForDropDown"", ""UserId"");
        FillMultiDropDown(""/JsonObject/GetCustomersForDropDown"", ""CardCode"");

        FillDropDown(""/JsonObject/GetU");
            WriteLiteral("sersForDropDown\", \"UserId\",\"");
#nullable restore
#line 1391 "/Users/yener.ozturk/Projects/TicketWeb/Ticket.Presentation/Views/Ticket/TicketList.cshtml"
                                                             Write(ViewData["UserId"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""");

        $(""#menuUser"").removeClass(""menu-item-open menu-item-here"");
        $(""#menuTicket"").removeClass(""menu-item-open menu-item-here"").addClass(""menu-item-open menu-item-here"");
        $(""#menuCalendar"").removeClass(""menu-item-open menu-item-here"");
        $(""#menuProject"").removeClass(""menu-item-open menu-item-here"");
        $(""#menuVersion"").removeClass(""menu-item-open menu-item-here"");
        $(""#menuCustomer"").removeClass(""menu-item-open menu-item-here"");
        $(""#menuReport"").removeClass(""menu-item-open menu-item-here"");

        $(""#reload"").click(function () {
            RenderData();
        });

        $(""#pageLength"").change(function () {
            RenderData();
        });

        GenerateTagify();


        RenderData();

        $(""#modalSubTicketList"").on(""show.bs.modal"", function () {
            $(""body"").addClass(""modal-open"");
        }).on(""hide.bs.modal"", function () {
            $(""body"").removeClass(""modal-open"")
        });


    $('#btnPdf').on('click', function (");
            WriteLiteral(") {\n\n        table.button(3).trigger();\n    });\n\n        $(\'#table\').on(\'page.dt\', function () {\n            var info = table.page.info();\n            $(\'#pageInfo\').html(\'Showing page: \' + info.page + \' of \' + info.pages);\n        });\n\n\n    });</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
