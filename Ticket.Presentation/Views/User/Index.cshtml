@model Ticket.Presentation.Models.UserModel
@{ ViewData["Title"] = "User"; }


<script>function SaveChanges() {

        var data = $('[name="frmUser"]').serializeArray();

        $.ajax({
            type: 'POST',
            url: '../../User/SaveUser',
            data: data,
            success: function () {
                $('[name="frmUser"]').trigger("reset");

                Swal.fire({
                    icon: 'success',
                    title: 'İşlem Başarılı',
                    showConfirmButton: true,
                    timer: 1500
                })
            }
        });

    }</script>


<div class="col-lg-12">
    <div class="card card-custom gutter-b example example-compact">
        <form class="form" name="frmUser">
            <div class="card-body">
                <input type="hidden" value="@Model.Id" name="Id" />
                <div class="form-group">
                    <label>Ad / Soyad:</label>
                    <input type="text" class="form-control form-control-solid" name="NameSurname" placeholder="Ad-Soyad" value="@Model.NameSurname" />
                </div>
                <div class="form-group">
                    <label>Email:</label>
                    <input type="email" class="form-control form-control-solid" name="Email" placeholder="Email" value="@Model.Email" />
                </div>
                <div class="form-group">
                    <label>Müşteri:</label>
                    <select class="form-control" name="CardCode">
                        <option value="3">Sanmar</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Şifre:</label>
                    <input type="password" class="form-control form-control-solid" placeholder="Şifre" name="Password" value="@Model.Password" />
                </div>
                <div class="form-group row">
                    <label class="checkbox">
                        @Html.CheckBoxFor(x => x.IsAdmin, new { @class = "form-control form-control-solid" })
                        <span></span>
                        Admin
                    </label>
                </div>
                <div class="form-group row">
                    <label class="checkbox">
                        @Html.CheckBoxFor(x => x.IsActive, new { @class = "form-control form-control-solid" })
                        <span></span>
                        Aktif
                    </label>
                </div>
            </div>
            <div class="card-footer">
                <button type="button" onclick="SaveChanges()" class="btn btn-primary mr-2">Kaydet</button>
                <button type="button" onclick="javascript:window.history.back();" class="btn btn-secondary">İptal</button>
            </div>
        </form>
    </div>
</div>


<script>

    $(document).ready(function () {


        var callback= function() {

            if (@Model.Id!= 0) {
                $("[name=CardCode]").val('@Model.CardCode');
            }

        }

        FillDropDown("/JsonObject/GetCustomersForDropDown", "CardCode", '@Model.CardCode');


        $("#menuUser").removeClass("menu-item-open menu-item-here").addClass("menu-item-open menu-item-here");
        $("#menuTicket").removeClass("menu-item-open menu-item-here");
        $("#menuCalendar").removeClass("menu-item-open menu-item-here");
        $("#menuProject").removeClass("menu-item-open menu-item-here");
        $("#menuVersion").removeClass("menu-item-open menu-item-here");
        $("#menuCustomer").removeClass("menu-item-open menu-item-here");
        $("#menuReport").removeClass("menu-item-open menu-item-here");

    });

</script>